#Learning Git#
---

##1. config
>git config --global  user.name 'xxx' 
git config --global user.email 'xxx@xxx.xx'

config配置git，___--global___ option可以配置全局，保存在～/.gitconfig文件中

##2. init
>cd 'urdir'   
git init

在你的dir下初始化repo。具体初始化的dir和其他路径与dir中的路径的关系，以及使用git命令时的current dir的关系，有待确定。目前看来，可以在dir德尔子目录下使用git，且依然使用dir下的repo。

##3. add/rm&commit
>git add gitnote.rm
git commit -m 'some comment' 
git rm gitnote.rm
git commit -m 'rm'

添加一些文件（***add***），然后提交（***commit***）
***rm***在tempload添加一个删除文，使用***commit***来提交删除
git rm不但是添加一个删除的命令，且==会和rm命令相同直接删除文件==

##4. status&log
>git status 
git log
git diff

check **workload for _add_** and check the **records of _commit_**
***diff*** shows the differences between the workload and tempload

##5. checkout&reset
>git checkout
>git reset --hard HEAD^
>git reset --hard [commitid]

***checkout***将暂存区（如果没有就是最近的分支）的==某个文件==复制到workload，即还原工作区的修改==改变的是workload==
***reset***则会返回版本 注意HEAD的指向，==使用***--hard***参数==

>git reflog

***reflog***返回分支变化记录

***
###sum
some conceptions and commends. 
|workload|------------|tmpload|-----------------|bunch|
  add ------------------>|commit----------------->|
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| <---------checkout|<----------------reset

---
##6. github, remote add & push
github 使用ssh验证，关于非对称加密，可见key.rm
>ssh-keygen -t rsa -C ‘myemailadress’ 

使用默认选项，一路回车创建你的密钥。linux在～/.ssh/下有你的公钥和私钥，复制**公钥**到github你的设置中。同时，要新建一个仓库（是否要和本地仓库同名？）
>cd your_repo_dir
>git remote add git@github.com:yournameingithub/yourreponame
>git push -u origin yourbrunchname

推送本地到远程需要在仓库目录下，
第一次连接两个仓库要命名一个origin，push时-u会把两个仓库的brunch关联起来
>git push origin reponame

之后就可以简化推送了